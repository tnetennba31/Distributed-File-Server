package DistributedFileApp;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.charset.StandardCharsets;
import java.nio.file.Files;
import java.util.ArrayList;
import java.util.List;

public class LockedFilesManager {

	static final String lockedFilesList = System.getProperty("user.home") + "/files/LockedFiles.config";

	public static boolean isLockedFile(String fileName) {
		try {
			List<String> fileContent = new ArrayList<>(
					Files.readAllLines((new File(lockedFilesList)).toPath(), StandardCharsets.UTF_8));
			if (fileContent.contains(fileName)) {
				return true;
			}
		} catch (IOException e1) {
			System.out.println("didn't get native file contents right");
		}
		return false;
	}

	public static void addToLockedList(String fileToLock) {

		BufferedWriter writer;

		fileToLock = fileToLock.trim();

		try {
			writer = new BufferedWriter(new FileWriter(lockedFilesList, true));

			writer.write(fileToLock);
			writer.newLine();
			writer.close();

		} catch (IOException e) {
			System.out.println("An error occurred while adding the file to locked list.");
		}
	}
// TODO- ISSUES ARE removing a file from a list, deleting a file when not native
	public static void removeFromLockedList(String fileToUnlock) {
		try {
			// read all content into list
			ArrayList<String> fileContent = new ArrayList<>(
					Files.readAllLines((new File(lockedFilesList)).toPath(), StandardCharsets.UTF_8));

			// change required line
			for (String s : fileContent) {
				if (s == fileToUnlock) {
					fileContent.remove(fileContent.indexOf(s));
				}
			}

			// write back to file
			Files.write((new File(lockedFilesList)).toPath(), fileContent, StandardCharsets.UTF_8);
		} catch (IOException e) {
			System.out.println("uh oh spaghetti-o, removing from locked file list");
		}
	}

}