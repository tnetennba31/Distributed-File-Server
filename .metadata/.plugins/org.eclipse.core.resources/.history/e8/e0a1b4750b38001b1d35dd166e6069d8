package DistributedFileApp;

import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStreamReader;

public class NativeFileReader {
	static String serversListFile = System.getProperty("user.home") + "/files/NativeFileList.config";
	private static BufferedReader bufferedReader;

	static {
		resetReader();
	}

	public static boolean isNativeFile(String fileName) {
		resetReader();
		try {
			String s = bufferedReader.readLine();
			while (s != null) {
				if (s.contentEquals(fileName))
					return true;
				s = bufferedReader.readLine();
			}
		} catch (IOException e) {
			e.printStackTrace();
		}
		return false;
	}

	public static void resetReader() {
		try {
			bufferedReader = new BufferedReader(new InputStreamReader(new FileInputStream(serversListFile)));
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		}
	}

	public static void removeFromListOfNativeFiles(String nameOfFileToRemove) {

		// read all content into list
		ArrayList<String> fileContent = new ArrayList<>(
				Files.readAllLines(FileManager.NAME_OF_NATIVE_FILE_LIST, StandardCharsets.UTF_8));

		// change required line
		for (String s : fileContent) {
			if (s == nameOfFileToRemove) {
				fileContent.remove(fileContent.indexOf(s));
			}
		}

		// write back to file
		Files.write(FileManager.NAME_OF_NATIVE_FILE_LIST, fileContent, StandardCharsets.UTF_8);
	}

}